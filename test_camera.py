#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã Basler
"""

import subprocess
import os

def run_command(cmd):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def diagnose_camera():
    print("üîß Camera Diagnostics")
    print("=" * 60)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ USB —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    print("1. üì∑ Checking USB devices:")
    success, stdout, stderr = run_command("lsusb")
    if success:
        print(stdout)
        if "Basler" in stdout or "1394" in stdout:
            print("‚úÖ Basler camera found via USB")
        else:
            print("‚ùå No Basler camera found in USB devices")
    else:
        print("‚ùå lsusb failed")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–µ–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    print("\n2. üìπ Checking video devices:")
    success, stdout, stderr = run_command("ls -la /dev/video* 2>/dev/null || echo 'No video devices'")
    print(stdout)
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ IEEE 1394 (FireWire) –¥–ª—è Basler
    print("\n3. üî• Checking FireWire devices:")
    success, stdout, stderr = run_command("ls -la /dev/fw* 2>/dev/null || echo 'No FireWire devices'")
    print(stdout)
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä—É–ø–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n4. üë§ Checking user groups:")
    success, stdout, stderr = run_command("groups")
    print(f"User groups: {stdout}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ pypylon
    print("\n5. üêç Checking via pypylon:")
    try:
        from pypylon import pylon
        tl_factory = pylon.TlFactory.GetInstance()
        devices = tl_factory.EnumerateDevices()
        print(f"Pypylon found {len(devices)} devices:")
        for i, device in enumerate(devices):
            print(f"  {i+1}. {device.GetModelName()} (SN: {device.GetSerialNumber()})")
    except Exception as e:
        print(f"‚ùå Pypylon error: {e}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    print("\n6. üì¶ Checking installed packages:")
    success, stdout, stderr = run_command("dpkg -l | grep -E '(pylon|basler)' || echo 'No Basler packages found'")
    print(stdout)
    
    print("=" * 60)

if __name__ == "__main__":
    diagnose_camera()